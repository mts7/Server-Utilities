#!/bin/bash
# Server Stats Checker

# Configuration variables
dir="/home/mts7/"
from="server@$HOSTNAME"
to="${HOSTNAME}_server@mts7.com"
fs="/dev/xvda"
# Alert Levels
cpuLevel=25
diskLevel=50
memLevel=60

echo "==============================================================================="
echo "Server Statistics for $HOSTNAME by Mike Rodarte"
echo "==============================================================================="


function cpu_check {
    str=$(uptime)
    la="load average: "
    pos=$(echo $str | grep -bo "$la" | sed 's/:.*$//')
    lenLa=${#la}
    lPos=$(($pos + $lenLa + 4))
    avg=${str:$lPos}
    first=$(echo $avg | cut -f1 -d",")
    noProcs=$(grep processor /proc/cpuinfo | wc -l)
    loadPct=$(bc <<< "scale = 2; $first * 100 / $noProcs")
    if [ "$loadPct" -ge "$cpuLevel" ]; then
        message="Load average is at ${loadPct}"
        mail="subject:High Load Average on $HOSTNAME\nfrom:${from}\n${message}\n\n${loadPct}"
        echo -e $mail | /usr/sbin/sendmail "${to}"
    fi
    echo "num processors: $noProcs"
    echo "load average: $loadPct%"
}


function disk_check {
    logFile="${dir}disk_usage.log"
    df -Ph > $logFile
    size=${#fs}
    total=0

    subject="$HOSTNAME Disk Usage Report"
    message=""
    while read line
    do
        # if start of file is $mounted
        # get usage %
        if [ "${line:0:$size}" == "$fs" ]; then
            IFS=' ' read -a array <<< "$line"
            total="${array[1]}"
            used="${array[4]}"
            pct=${used//\%/}
            if [ "$pct" -ge "$diskLevel" ]; then
                message="Usage is high at ${used}"
                mail="subject:${subject}\nfrom:${from}\n${message}\n\n${usage}"
                echo -e $mail | /usr/sbin/sendmail "$to"
            fi
        fi
    done < $logFile
    rm -f $logFile
    echo "disk size: $total"
    echo "disk used: $pct%"
}


function memory_check {
    logFile="${dir}vmstat_results"
    touch $logFile
    vmstat -s > $logFile

    i=0
    total=0
    free=0
    used=0
    pct=0
    while read line
    do
        i=$(($i + 1))
        amt=$(echo $line | tr -d '[:alpha:]')
        if [ "$i" -eq "1" ]; then
            total=$amt
        elif [ "$i" -eq "2" ]; then
            used=$amt
        elif [ "$i" -eq "5" ]; then
            free=$(($free + $amt))
        elif [ "$i" -eq "6" ]; then
            free=$(($free + $amt))
        elif [ "$i" -eq "7" ]; then
            free=$(($free + $amt))
        fi
    done < $logFile

    nonFree=$(($total - $free))
    #pct=$(bc <<< "scale = 2; $used * 100 / $total")
    pct=$(($nonFree * 100 / $total))

    if [ "$nonFree" -ge "$memLevel" ]; then
        subject="$HOSTNAME Memory Usage"
        message="Memory usage is at $pct%."
        mail="subject:${subject}\nfrom:${from}\n${message}\n\n${usage}"
        echo -e $mail | /usr/sbin/sendmail "$to"
    fi

    rm -f $logFile
    echo "total memory: $(($total / 1024))M"
    echo "memory used: $pct%"
}


# execute functions
cpu_check
disk_check
memory_check

